{% extends 'base.html.twig' %}

{% block title %}Recherche - Entr'Aide 2.0
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<style>
	/* Variables CSS pour une meilleure maintenance */:root
	{
		--primary-color: #4CAF50;
		--primary-light: #C8E6C9;
		--primary-dark: #2e7d32;
		--shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
	}

	.search-card {
		border: none;
		border-radius: 16px;
		box-shadow: var(--shadow);
		transition: transform 0.3s ease, box-shadow 0.3s ease;
		overflow: hidden;
	}

	.search-card:hover {
		transform: translateY(-5px);
		box-shadow: 0 8px 20px rgba(76, 175, 80, 0.2);
	}

	.search-card-header {
		background-color: var(--primary-color);
		color: white;
		padding: 1.5rem;
		border-radius: 16px 16px 0 0 !important;
	}

	.search-card-header h1 {
		font-weight: 600;
		margin-bottom: 0;
	}

	.search-form .form-select {
		padding: 0.8rem 1.5rem;
		border-radius: 8px;
		border: 1px solid #ddd;
		transition: border-color 0.2s;
	}

	.search-form .form-select:focus {
		border-color: var(--primary-color);
		box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.25);
	}

	.btn-primary {
		background-color: var(--primary-color);
		border-color: var(--primary-color);
		padding: 0.8rem 2rem;
		border-radius: 30px;
		font-weight: 500;
		transition: all 0.2s;
	}

	.btn-primary:hover {
		background-color: var(--primary-dark);
		transform: translateY(-2px);
		box-shadow: 0 4px 8px rgba(76, 175, 80, 0.3);
	}

	.avatar {
		width: 50px;
		height: 50px;
		display: flex;
		align-items: center;
		justify-content: center;
		font-size: 1.5rem;
		font-weight: bold;
		border: 3px solid white;
		box-shadow: var(--shadow);
	}

	.user-card {
		border-radius: 16px;
		box-shadow: var(--shadow);
		transition: transform 0.3s ease;
		height: 100%;
		border: 1px solid #eee;
	}

	.user-card:hover {
		transform: translateY(-5px);
		box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
	}

	.skill-badge {
		background-color: var(--primary-light);
		color: var(--primary-dark);
		font-size: 0.8rem;
		padding: 0.3rem 0.8rem;
		border-radius: 20px;
	}

	.filter-pill {
		background-color: var(--primary-color);
		color: white;
		font-size: 0.85rem;
		padding: 0.4rem 0.8rem;
		border-radius: 20px;
	}

	.stats-text {
		color: var(--primary-dark);
		font-weight: 500;
	}

	.contact-btn {
		background-color: transparent;
		color: var(--primary-color);
		border: 2px solid var(--primary-color);
		border-radius: 30px;
		transition: all 0.2s;
		font-weight: 500;
	}

	.contact-btn:hover {
		background-color: var(--primary-color);
		color: white;
	}

	.empty-state {
		text-align: center;
		padding: 3rem 1rem;
		border-radius: 16px;
		border: 1px dashed #ddd;
		background-color: #f9f9f9;
	}

	.empty-state i {
		font-size: 3rem;
		color: var(--primary-light);
		margin-bottom: 1rem;
	}
</style>{% endblock %}{% block body %}
<div class="container py-5">
	<div class="search-card">
		<div class="search-card-header">
			<h1>
				<i class="bi bi-search me-2"></i>Rechercher des membres</h1>
		</div>
		<div class="card-body search-form">
			{{ form_start(form) }}
			<div class="row g-3">
				<div class="col-md-6">
					{{ form_row(form.category, {
                        label: 'Catégorie',
                        attr: {class: 'form-select form-select-lg'}
                    }) }}
				</div>
				<div class="col-md-6">
					{{ form_row(form.skill, {
                        label: 'Compétence',
                        attr: {class: 'form-select form-select-lg'}
                    }) }}
				</div>
			</div>
			<div class="text-center mt-4">
				<button type="submit" class="btn btn-primary">
					<i class="bi bi-funnel-fill me-2"></i>Filtrer
				</button>
			</div>
			{{ form_end(form) }}
		</div>
	</div>

	{# Section résultats #}
	<div class="mt-5">
		{% if users|length > 0 %}
			<div class="mb-4">
				<h2 class="h5 stats-text">
					<i class="bi bi-people-fill me-2"></i>
					{{ users|length }}
					résultat(s)
					{% if selectedCategory or selectedSkill %}
						<span class="ms-3">
							Filtres :
							{% if selectedCategory %}
								<span class="filter-pill badge">{{ selectedCategory.name }}</span>
							{% endif %}
							{% if selectedSkill %}
								<span class="filter-pill badge">{{ selectedSkill.name }}</span>
							{% endif %}
						</span>
					{% endif %}
				</h2>
			</div>

			<div class="row g-4">
				{% for user in users %}
					<div class="col-md-6 col-lg-4">
						<div class="card h-100 user-card">
							<div class="card-body">
								<div class="d-flex align-items-center mb-4">
									<div class="avatar bg-primary text-white rounded-circle me-3">
										{{ user.pseudo|first|upper }}
									</div>
									<div>
										<h3 class="h5 mb-1">{{ user.pseudo }}</h3>
										<small class="text-muted">Membre depuis
											{{ user.createdAt|date('m/Y') }}</small>
									</div>
								</div>

								{% if user.skills|length > 0 %}
									<div class="mb-4">
										<h4 class="h6 text-primary mb-2">
											<i class="bi bi-tools me-1"></i>Compétences
										</h4>
										<div class="d-flex flex-wrap gap-2">
											{% for skill in user.skills|slice(0, 3) %}
												<span class="skill-badge badge">{{ skill.name }}</span>
											{% endfor %}
											{% if user.skills|length > 3 %}
												<span class="badge bg-secondary">+{{ user.skills|length - 3 }}</span>
											{% endif %}
										</div>
									</div>
								{% endif %}

								<a href="{{ path('app_message_new', {id: user.id}) }}" class="btn contact-btn w-100">
									<i class="bi bi-envelope me-2"></i>Contacter
								</a>
							</div>
						</div>
					</div>
				{% endfor %}
			</div>
		{% elseif isSubmitted %}
			<div class="alert empty-state">
				<i class="bi bi-info-circle"></i>
				<p class="mb-0">Aucun membre trouvé avec ces critères</p>
			</div>
		{% else %}
			<div class="search-help-text">
				<p class="mb-0">Utilisez les filtres pour affiner votre recherche</p>
			</div>
		{% endif %}
	</div>
</div>{% endblock %}{% block javascripts %}
{{ parent() }}
<script>
	document.addEventListener('DOMContentLoaded', function () {
const categorySelect = document.querySelector('[name="search[category]"]');
const skillSelect = document.querySelector('[name="search[skill]"]');

if (categorySelect && skillSelect) {
const loadSkills = async (categoryId) => {
const selectedSkillId = skillSelect.value;

try {
const response = await fetch (`/search/skills?categoryId=${categoryId}`);
const skills = await response.json();

const placeholderText = categoryId ? 'Toutes les compétences de cette catégorie' : 'Toutes les compétences';

skillSelect.innerHTML = `<option value="">${placeholderText}</option>`;

skills.forEach(skill => {
const option = document.createElement('option');
option.value = skill.id;
option.textContent = skill.name;
if (skill.id == selectedSkillId) 
option.selected = true;

skillSelect.appendChild(option);
});
} catch (error) {
console.error('Erreur de chargement des compétences', error);
skillSelect.innerHTML = '<option value="">Toutes les compétences</option>';
}
};

// Chargement initial
if (categorySelect.value) {
loadSkills(categorySelect.value);
} else {
loadSkills(null);
}

// Écouteur changement catégorie
categorySelect.addEventListener('change', function () {
loadSkills(this.value);
});
}
});
</script>{% endblock %}
