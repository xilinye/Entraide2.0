{% extends 'base.html.twig' %}

{% block title %}
	{{ post.title }}
	- Entr'Aide 2.0
{% endblock %}

{% block stylesheets %}
	<style>
		.star-rating {
			display: flex;
			gap: 5px;
			flex-direction: row-reverse;
			justify-content: flex-end;
		}

		.star-rating input {
			display: none;
		}

		.star-rating label {
			cursor: pointer;
			color: #ddd;
			transition: color 0.2s;
		}

		.star-rating label:hover,
		.star-rating label:hover ~ label {
			color: #ffd700;
		}

		.star-rating .star {
			fill: currentColor;
			width: 2.5em;
			height: 2.5em;
		}
	</style>
{% endblock %}

{% block body %}
	<div class="container mt-5">
		<article class="blog-post">
			<h1 class="mb-4">{{ post.title }}</h1>

			<div class="meta mb-4 text-muted">
				Par
				{{ post.author.pseudo }}
				•
				{{ post.createdAt|date('d/m/Y H:i') }}
			</div>

			<div class="content mb-5">
				{{ post.content|nl2br }}
			</div>

			<div class="rating-section">
				<div class="average-rating alert alert-info">
					<h4>Note moyenne :
						{{ averageRating|number_format(1) }}/5</h4>
					<small class="text-muted">Basé sur
						{{ ratings|length }}
						avis</small>
				</div>

				{% if ratings|length > 0 %}
					<div class="user-ratings">
						<h4>Avis des utilisateurs :</h4>
						{% for rating in ratings %}
							<div class="card rating-card mb-3">
								<div class="card-body">
									<div class="star-rating-static text-warning">
										{% for i in 1..5 %}
											{% if i <= rating.score %}
												<span class="text-warning">★</span>
											{% else %}
												<span class="text-muted">★</span>
											{% endif %}
										{% endfor %}
									</div>
									{% if rating.comment %}
										<p class="mt-2">{{ rating.comment }}</p>
									{% endif %}
									<small class="text-muted">
										Par
										{{ rating.rater.pseudo }}, 
																																																																																																																																																																																																																																																																																																																						le
										{{ rating.createdAt|date('d/m/Y') }}
									</small>
								</div>
							</div>
						{% endfor %}
					</div>
				{% endif %}
				{% if app.user != post.author %}
					<div class="rating-form card p-4 mb-5">
						<h4>
							{% if hasRated %}
								Modifier votre avis
							{% else %}
								Ajouter votre avis
							{% endif %}
						</h4>
						{# Dans la section du formulaire #}
						{{ form_start(ratingForm) }}
						<div class="star-rating mb-3">
							{% for child in ratingForm.score|reverse %}
								<input type="radio" id="{{ child.vars.id }}" name="{{ child.vars.full_name }}" value="{{ child.vars.value }}" {{ child.vars.checked ? 'checked' : '' }} class="visually-hidden"/>
								<label for="{{ child.vars.id }}" title="{{ child.vars.label }}">
									<svg class="star" width="32" height="32" viewbox="0 0 24 24">
										<path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/>
									</svg>
								</label>
							{% endfor %}
						</div>
						{{ form_errors(ratingForm.score) }}
						{# Affiche les erreurs du score #}
						{{ form_row(ratingForm.comment) }}
						{{ form_rest(ratingForm) }}
						{# Inclut le token CSRF #}
						<button class="btn btn-primary">
							{% if hasRated %}Mettre à jour{% else %}Publier
							{% endif %}
						</button>
					</div>
				{% endif %}
			</div>
		</article>
	</div>
{% endblock %}
{% block javascripts %}
	<script>
		document.querySelectorAll('.star-rating').forEach(container => {
const stars = container.querySelectorAll('input');
stars.forEach(star => { // Initialisation basée sur l'étoile cochée
if (star.checked) {
highlightStars(stars, parseInt(star.value));
}

star.addEventListener('change', () => {
const selectedValue = parseInt(star.value);
highlightStars(stars, selectedValue);
});
});
});

function highlightStars(stars, selectedValue) {
stars.forEach(star => {
const label = star.nextElementSibling; // Le label suit l'input
const starValue = parseInt(star.value);
if (starValue <= selectedValue) {
label.querySelector('.star').style.fill = '#ffd700';
} else {
label.querySelector('.star').style.fill = '#ddd';
}
});
}
	</script>
{% endblock %}
